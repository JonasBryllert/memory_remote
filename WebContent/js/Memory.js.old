/**
 * 
 */

/**
 * Returns a shuffled array
 */
var memory = memory || {};

memory.ArrayFunctions = (function() {
	return {
		shuffle: function(o) {
		    for(var j, x, i = o.length; i; j = Math.floor(Math.random() * i), x = o[--i], o[i] = o[j], o[j] = x);
		    return o;			
		},
		duplicate: function(a) {
			var temp = [];
			a.forEach(function(value) {
				temp.push(value);
				temp.push(value);
			});
			return temp;		
		}
	};
})();

memory.Game = function() {
	this.player1 = new memory.Player('Player 1');
	this.player2 = new memory.Player('Player 2');
	this.currentPlayer = null;
};

memory.Game.prototype = function() {
	var nextPlayer = function() {
		if (this.currentPlayer === this.player1) {
			this.currentPlayer = this.player2;
		}
		else {
			this.currentPlayer = this.player1;
		}
	};

	return {
		nextPlayer: nextPlayer
	};
}();

memory.Player = function(name) {
	this.points = 0;
	this.name = name;
};

memory.Player.prototype = function() {
	var increment = function() {
		this.points += 1;
	};
	var getPoints= function() {
		return this.points;
	};
	return {
		increment: increment,
		getPoints: getPoints
	};
}();


memory.clickManager = (function() {
	var firstCell = null;
	var secondCell = null;
	var removeHandler = null;
	var dojoObj = {};
	var game = null;
	return {
		initialise: function(_dom, _domConstruct, _query, _domClass, _domStyle, _topic) {
			dojoObj.dom = _dom;
			dojoObj.domConstruct = _domConstruct;
			dojoObj.query = _query;
			dojoObj.domClass = _domClass;
			dojoObj.domStyle = _domStyle;
			dojoObj.topic = _topic;
		},
		startGame: function() {
			game = new memory.Game();
			game.nextPlayer();
			this.showPlayerInfo();
			this.addClickHandling();
		},
		showPlayerInfo: function(secondMove) {
	        var infoDiv = dojoObj.dom.byId('infoDiv');
	        infoDiv.innerHTML = "";
	        if (secondMove) {
	        	dojoObj.domConstruct.place('</strong>Well done ' + game.currentPlayer.name + ': Please make your another move.</strong>', infoDiv);
	        }
	        else {
	        	dojoObj.domConstruct.place('</strong>' + game.currentPlayer.name + ': Please make your move.</strong>', infoDiv);
	        }
		},
		showGoodMoveInfo: function() {
	        var infoDiv = dojoObj.dom.byId('infoDiv');
	        infoDiv.innerHTML = "";
	        dojoObj.domConstruct.place('<i>Nice move...</i>', infoDiv);
		},
		showBadMoveInfo: function() {
	        var infoDiv = dojoObj.dom.byId('infoDiv');
	        infoDiv.innerHTML = "";
	        dojoObj.domConstruct.place('<i>Tough luck...</i>', infoDiv);
		},
		showGameOver: function() {
	        var infoDiv = dojoObj.dom.byId('infoDiv');
	        infoDiv.innerHTML = "";
	        var resultString;
	        if (game.player1.points > game.player2.points) {
	        	resultString = game.player1.name + ' has won!';
	        }
	        else if (game.player1.points < game.player2.points) {
	        	resultString = game.player2.name + ' has won!';
	        }
	        else {
	        	resultString = 'It is a draw';
	        }
	        dojoObj.domConstruct.place('<h3>Game over. ' + resultString + '</h3>', infoDiv);			
//	        dojoObj.domConstruct.place('h3>Game over.</h3>', infoDiv);			
		},
		showScore: function() {
			document.getElementById("playerOneScore").innerHTML = game.player1.points;
			document.getElementById("playerTwoScore").innerHTML = game.player2.points;
		},
		setRemoveHandler: function(rh) {
			removeHandler = rh;
		},
		reset: function() {
			firstCell = null;
			secondCell = null;
			removeHandler = null;
		},
		addClickHandling: function() {
			removeHandler = dojoObj.query("td.available").on("click", function() {
				memory.clickManager.handleCellClick(this);
			});
      	},
		removeClickHandling: function() {
			removeHandler.remove();
      	},
		handleCellClick: function(tdCell) {
			dojoObj.domClass.remove(tdCell.children[0], "hide");
			if (firstCell == null) {
				firstCell = tdCell;
			}
			else {
				//Second cell, remove click listener, Wait a few secs and then check result 
				secondCell = tdCell;
				this.removeClickHandling();
				if (firstCell.children[0].src === secondCell.children[0].src) {
					this.showGoodMoveInfo();
				}
				else {
					this.showBadMoveInfo();
				}
				setTimeout(function() {
					memory.clickManager.checkResult.call(memory.clickManager);
				}, 3000);
			}
		},
		//Checks the result and takes action accordingly
		checkResult: function() {
			if (firstCell.children[0].src === secondCell.children[0].src) {
				game.currentPlayer.increment();
				dojoObj.domClass.remove(firstCell, "available");
				dojoObj.domClass.remove(secondCell, "available");
				dojoObj.domConstruct.empty(firstCell);
				dojoObj.domConstruct.empty(secondCell);
//				dojoObj.domStyle.set(firstCell, "backgroundImage", "");
//				dojoObj.domStyle.set(secondCell, "backgroundImage", "");
				this.showScore();
				this.reset();
				if (dojoObj.query(".available").length <= 0) {
					//None left so game over
					this.showGameOver();
				}
				else {
					this.showPlayerInfo(true);
					this.addClickHandling();
				}
			}
			else {
				dojoObj.domClass.add(firstCell.children[0], "hide");
				dojoObj.domClass.add(secondCell.children[0], "hide");
				this.reset();
				game.nextPlayer();
				this.showPlayerInfo();
				this.addClickHandling();
			}
		}
	};
})();


//Store images locally temp
var images = ["images/panda.jpg", "images/frog.jpg", "images/cheetah.jpg"];
//The shuffled array of images containing two of each
var shuffledImages = memory.ArrayFunctions.shuffle(memory.ArrayFunctions.duplicate(images));

require([
        'dojo/dom',
        'dojo/dom-construct',
        'dojo/query',
        'dojo/dom-class',
        'dojo/dom-style',
        'dojo/topic',
        'dojo/domReady!'
    ], function (dom, domConstruct, query, domClass, domStyle, topic) {
	
		memory.clickManager.initialise(dom, domConstruct, query, domClass, domStyle, topic);
		
        var greetingNode = dom.byId('infoDiv');
        domConstruct.place('<i> Dojo!</i>', greetingNode);
 
       	var tbody = domConstruct.create("tbody");
       	var currentRow = null;
       	var imagesPerRow = Math.min(5, Math.floor(shuffledImages.length / 2));
       	shuffledImages.forEach(function(value, index, array) {
        	if (index % imagesPerRow == 0) {
        		currentRow = domConstruct.create("tr");
        	}
        	domConstruct.place("<td class='available'><img class='gameImage hide' alt='1' src=" + value + "></td>", currentRow);
        	if ((index + 1) % imagesPerRow == 0 || index == array.length - 1) {
        		//place row in tbody
        		domConstruct.place(currentRow, tbody);
        	}
         });
       	domConstruct.place(tbody, "gameTable");

       	memory.clickManager.startGame();
    });

